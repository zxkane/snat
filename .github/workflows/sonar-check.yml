name: code scans
on:
  pull_request: {}
  workflow_dispatch: {}
  merge_group: {}
jobs:
  sonarqube:
    name: sonarqube scan
    runs-on: 'ubuntu-latest'
    services:
      sonarqube:
        image: public.ecr.aws/docker/library/sonarqube:9.9.0-community
        ports:
          - 9000:9000
    steps:
      - uses: actions/checkout@v4
      - name: Configure sonarqube
        env:
          SONARQUBE_URL: http://localhost:9000
          SONARQUBE_ADMIN_PASSWORD: ${{ secrets.SONARQUBE_ADMIN_PASSWORD }}
        run: |
          bash .github/workflows/sonarqube/sonar-configure.sh
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_HOST_URL: http://sonarqube:9000
        with:
          args: >
            -Dsonar.login=admin
            -Dsonar.password=${{ secrets.SONARQUBE_ADMIN_PASSWORD }}
            -Dsonar.projectKey=pr-${{ github.event.pull_request.number }}
      # Check the Quality Gate status.
      # - name: SonarQube Quality Gate check
      #   id: sonarqube-quality-gate-check
      #   uses: sonarsource/sonarqube-quality-gate-action@master
      #   # Force to fail step after specific time.
      #   timeout-minutes: 10
      #   env:
      #     DEBUG: "true"
      #     SONAR_TOKEN: ${{ env.SONARQUBE_TOKEN }}
      #     SONAR_HOST_URL: http://localhost:9000

      - uses: phwt/sonarqube-quality-gate-action@v1
        id: quality-gate-check
        with:
          sonar-project-key: pr-${{ github.event.pull_request.number }}
          sonar-host-url: http://sonarqube:9000
          sonar-token: ${{ env.SONARQUBE_TOKEN }}
          github-token: ${{ secrets.PROJEN_GITHUB_TOKEN }}

      - name: Output result
        run: |
          echo "${{ steps.quality-gate-check.outputs.project-status }}"
          echo "${{ steps.quality-gate-check.outputs.quality-gate-result }}"  